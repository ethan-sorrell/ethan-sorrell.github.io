{"version":3,"sources":["sudoku_cljs/core.cljs"],"mappings":";;;;;;;;AASA,AAAA,AAAMA;AAAN,AACE,AAAMC;AAAN,AACE,AAAA,AAACC;;AADH;;;AAGF,AAAA,AAAuBC;AAAvB,AACE,AAACC,AAAAA,AAAAA;;AACD,AAAA,AAACC,AACCC,AACD,AAAA,AAAiBC;;AAEpB,AAAA,AAAMC;AAAN,AACE,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAA,AAAAA,AAACC,AAAAA,AAAAA;;AACD,AAACV;;AACD,AAACG","names":["sudoku-cljs.core/dev-setup","sudoku-cljs.config/debug?","cljs.core.println.cljs$core$IFn$_invoke$arity$variadic","sudoku-cljs.core/mount-root","re-frame.core/clear-subscription-cache!","reagent.core.render.cljs$core$IFn$_invoke$arity$2","sudoku-cljs.views/main-panel","js/document","sudoku-cljs.core/init","G__40773","re-frame.core/dispatch-sync"],"sourcesContent":["(ns sudoku-cljs.core\n  (:require\n   [reagent.core :as reagent]\n   [re-frame.core :as re-frame]\n   [sudoku-cljs.events :as events]\n   [sudoku-cljs.views :as views]\n   [sudoku-cljs.db :as db] ;; probably temporary\n   [sudoku-cljs.config :as config]))\n\n(defn dev-setup []\n  (when config/debug?\n    (println \"dev mode\")))\n\n(defn ^:dev/after-load mount-root []\n  (re-frame/clear-subscription-cache!)\n  (reagent/render\n   [views/main-panel]\n   (.getElementById js/document \"app\")))\n\n(defn init []\n  (re-frame/dispatch-sync [::events/initialize-db])\n  (dev-setup)\n  (mount-root))\n"]}