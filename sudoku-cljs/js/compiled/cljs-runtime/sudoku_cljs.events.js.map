{"version":3,"sources":["sudoku_cljs/events.cljs"],"mappings":";;;;;AAMA,AAAA,AAACA,AAEA,AAAKC,AAAEA;AAAP,AACEC;;AAEH,AAAA,AAACF,AAEA,AAAAG,AAAKG;AAAL,AAAA,AAAAF,AAAAD;AAAA,AAAAE,AAAAD,AAAA,AAAA,AAASH;AAAT,AAAAI,AAAAD,AAAA,AAAA,AAAWG;AAAX,AAAAF,AAAAD,AAAA,AAAA,AAAeI;AAAf,AACMF,AACA,AAACG,AAAMF,AAAIC,AACX,AAAA,AAAA,AAAA,AAACE,AAAsBC,AAAMJ,AAC7B,AAAA,AAAA,AAAA,AAACG,AAAsBC,AAAMJ,AAC7B,AAAA,AAAA,AAAA,AAACG,AAAsBC,AAAMJ,AAC7B,AAACK","names":["re_frame.core.reg_event_db.cljs$core$IFn$_invoke$arity$2","_","sudoku-cljs.db/default-db","p__52958","vec__52960","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","db","pos","val","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","cljs.core.update.cljs$core$IFn$_invoke$arity$4","cljs.core/conj","sudoku-cljs.solve/update-invalid-posns"],"sourcesContent":["(ns sudoku-cljs.events\n  (:require\n   [re-frame.core :as re-frame]\n   [sudoku-cljs.db :as db]\n   [sudoku-cljs.solve :as solve]))\n\n(re-frame/reg-event-db\n ::initialize-db\n (fn [_ _]\n   db/default-db))\n\n(re-frame/reg-event-db\n ::board\n (fn [db [_ pos val]]\n   (-> db\n       (assoc pos val)\n       (update :invalid-cells conj [pos :row])\n       (update :invalid-cells conj [pos :col])\n       (update :invalid-cells conj [pos :square])\n       (solve/update-invalid-posns))))\n"]}